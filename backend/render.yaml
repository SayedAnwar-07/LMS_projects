services:
  - type: web
    name: django-backend
    env: python
    startCommand: gunicorn backend.wsgi:application
    envVars:
      - key: SECRET_KEY
        value: django-insecure-%8w9=v^+e5y5u$%1s@kcd6y!zf8%@54^_5omevb
      - key: DEBUG
        value: False
      - key: ALLOWED_HOSTS
        value: django-backend.onrender.com
      - key: STRIPE_SECRET_KEY
        value: sk_test_51RbwOQDCq52O5K5ofUDnOjx8vC8z0m0Pt56p0su2qU9eXbrQxr3WoF1LeiAY7TuAtyS9Wjfwx73OMYTdZPFks4bj00MHaO2oIs
      - key: PUBLISHABLE_KEY
        value: pk_test_51RbwOQDCq52O5K5oOP8pYDX4KLNbsvlu3kYXlL8O8TiJP18uXBF5mvxP2eJXiSnYvFL5Uc55sJpkq0mgyLmUQPiU00r4hGQmGs
      - key: EMAIL_HOST
        value: smtp.gmail.com
      - key: EMAIL_PORT
        value: 587
      - key: EMAIL_USE_TLS
        value: True
      - key: EMAIL_HOST_USER
        value: dextervilgax@gmail.com
      - key: EMAIL_HOST_PASSWORD
        value: rsjtilonubmqjkpm
      - key: DEFAULT_FROM_EMAIL
        value: dextervilgax@gmail.com
      - key: SITE_NAME
        value: The Learning Hall
      - key: DB_ENGINE
        value: django.db.backends.sqlite3
      - key: DB_NAME
        value: db.sqlite3

    buildCommand: |
      # 1) install your deps
      pip install -r requirements.txt

      # 2) collect static files
      python manage.py collectstatic --noinput

      # 3) apply all migrations
      python manage.py migrate --noinput

      # 4) create a default superuser (only on first deploy)
      DJANGO_SUPERUSER_USERNAME=admin \
      DJANGO_SUPERUSER_EMAIL=admin@example.com \
      DJANGO_SUPERUSER_PASSWORD=StrongPass123 \
      python manage.py createsuperuser --noinput
      startCommand: |
      gunicorn config.wsgi:application --bind 0.0.0.0:$PORT
